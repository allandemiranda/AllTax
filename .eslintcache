[{"/home/allanmiranda/Documentos/AllTax/my-app/src/index.js":"1","/home/allanmiranda/Documentos/AllTax/my-app/src/App.js":"2","/home/allanmiranda/Documentos/AllTax/my-app/src/reportWebVitals.js":"3","/home/allanmiranda/Área de Trabalho/agilesolutions/src/index.js":"4","/home/allanmiranda/Área de Trabalho/agilesolutions/src/App.js":"5","/home/allanmiranda/Área de Trabalho/agilesolutions/src/reportWebVitals.js":"6"},{"size":557,"mtime":1608237973784,"results":"7","hashOfConfig":"8"},{"size":8507,"mtime":1608251939459,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608236870380,"results":"10","hashOfConfig":"8"},{"size":557,"mtime":1608237973784,"results":"11","hashOfConfig":"12"},{"size":8507,"mtime":1608251939459,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608236870380,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1po7m3t",{"filePath":"18","messages":"19","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ij8skf",{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/allanmiranda/Documentos/AllTax/my-app/src/index.js",[],["30","31"],"/home/allanmiranda/Documentos/AllTax/my-app/src/App.js",["32","33","34","35","36","37","38","39","40","41","42","43"],"import { useState, useEffect } from \"react\";\nimport { Navbar, Form, Row, Col } from \"react-bootstrap\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction App() {\n    const tableData = {\n        category: [\n            {\n                nome: \"comida\",\n                product: [\n                    {\n                        nome: \"arroz\",\n                        brand: [\n                            { nome: \"nordeste\", valores: [1, 2, 3, 4] },\n                            { nome: \"china\", valores: [4, 3, 2, 1] },\n                        ],\n                    },\n                    {\n                        nome: \"feijão\",\n                        brand: [\n                            { nome: \"tio\", valores: [1, 3, 3, 3] },\n                            { nome: \"zuzu\", valores: [1, 1, 3, 4] },\n                        ],\n                    },\n                ],\n            },\n            {\n                nome: \"carro\",\n                product: [\n                    {\n                        nome: \"pneu\",\n                        brand: [\n                            { nome: \"pirelli\", valores: [1, 0, 1, 4] },\n                            { nome: \"golden\", valores: [2, 2, 0, 4] },\n                        ],\n                    },\n                    {\n                        nome: \"limpador\",\n                        brand: [\n                            { nome: \"xa\", valores: [0, 4, 0, 4] },\n                            { nome: \"ya\", valores: [1, 2, 2, 2] },\n                        ],\n                    },\n                ],\n            },\n        ],\n    };\n\n    const [chartOptions, setChartOptions] = useState({\n        chart: {\n            type: \"column\",\n        },\n        xAxis: {\n            categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\"],\n        },\n        series: [\n            {\n                name: \"Sales\",\n                data: tableData.category[0].product[0].brand[0].valores,\n            },\n        ],\n        title: {\n            text: \"Sales By Month for:\",\n        },\n        yAxis: {\n            title: {\n                text: 'Sales'\n            }\n        },\n    });\n\n    const [categoryState, setCategoryState] = useState(\n        tableData.category[0].nome\n    );\n\n    const [productState, setProductState] = useState(\n        tableData.category[0].product[0].nome\n    );\n\n    const [brandState, setBrandState] = useState(\n        tableData.category[0].product[0].brand[0].nome\n    );\n\n    useEffect(() => {\n        tableData.category.map((value) => {\n            if (value.nome === categoryState) {\n                setProductState(value.product[0].nome);\n            }\n        });\n    }, [categoryState]);\n\n    useEffect(() => {\n        tableData.category.map((value) => {\n            if (value.nome === categoryState) {\n                value.product.map((value1) => {\n                    if (value1.nome === productState) {\n                        setBrandState(value1.brand[0].nome);\n                    }\n                });\n            }\n        });\n    }, [productState]);\n\n    useEffect(() => {\n        tableData.category.map((value) => {\n            if (value.nome === categoryState) {\n                value.product.map((value1) => {\n                    if (value1.nome === productState) {\n                        value1.brand.map((value2) => {\n                            if (value2.nome === brandState) {\n                                setChartOptions({\n                                    ...chartOptions,\n                                    series: [\n                                        { name: \"Sales\", data: value2.valores },\n                                    ],\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    }, [brandState]);\n\n    return (\n        <div>\n            <Navbar style={{ backgroundColor: \"#0087bd\" }}>\n                <Navbar.Brand href=\"#home\" style={{ color: \"#fff\" }}>\n                    Menu\n                </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\"></Navbar.Collapse>\n            </Navbar>\n            <br></br>\n            <Form>\n                <Form.Row>\n                  <Col md=\"2\"></Col>\n                    <Form.Group as={Row} md=\"3\" controlId=\"Category-form\">\n                        <Form.Label column lg={4}>Category:</Form.Label>\n                        <Col md=\"8\">\n                            <Form.Control\n                                as=\"select\"\n                                onChange={(event) => {\n                                    setCategoryState(event.target.value);\n                                }}\n                                custom\n                            >\n                                {tableData.category.map((value, key) => {\n                                    return (\n                                        <option key={key}>{value.nome}</option>\n                                    );\n                                })}\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Col md=\"2\"></Col>\n                    <Form.Group as={Row} md=\"3\" controlId=\"Product-form\">\n                        <Form.Label column lg={4}>Product:</Form.Label>\n                        <Col md=\"8\">\n                            <Form.Control\n                                as=\"select\"\n                                onChange={(event) => {\n                                    setProductState(event.target.value);\n                                }}\n                                custom\n                            >\n                                {tableData.category.map((value, key) => {\n                                    if (value.nome === categoryState) {\n                                        return value.product.map(\n                                            (value1, key1) => {\n                                                return (\n                                                    <option key={key1}>\n                                                        {value1.nome}\n                                                    </option>\n                                                );\n                                            }\n                                        );\n                                    }\n                                })}\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Col md=\"2\"></Col>\n                    <Form.Group as={Row} md=\"3\" controlId=\"Brand-form\">\n                        <Form.Label column lg={3}>Brand:</Form.Label>\n                        <Col md=\"9\" >\n                            <Form.Control\n                                as=\"select\"\n                                onChange={(event) => {\n                                    setBrandState(event.target.value);\n                                }}\n                                custom\n                            >\n                                {tableData.category.map((value) => {\n                                    if (value.nome === categoryState) {\n                                        return value.product.map((value1) => {\n                                            if (value1.nome === productState) {\n                                                return value1.brand.map(\n                                                    (value2, key2) => {\n                                                        return (\n                                                            <option key={key2}>\n                                                                {value2.nome}\n                                                            </option>\n                                                        );\n                                                    }\n                                                );\n                                            }\n                                        });\n                                    }\n                                })}\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n            <br></br>\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n        </div>\n    );\n}\n\nexport default App;\n","/home/allanmiranda/Documentos/AllTax/my-app/src/reportWebVitals.js",[],["44","45"],"/home/allanmiranda/Área de Trabalho/agilesolutions/src/index.js",[],"/home/allanmiranda/Área de Trabalho/agilesolutions/src/App.js",["46","47","48","49","50","51","52","53","54","55","56","57"],"/home/allanmiranda/Área de Trabalho/agilesolutions/src/reportWebVitals.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":86,"column":40,"nodeType":"64","messageId":"65","endLine":86,"endColumn":42},{"ruleId":"66","severity":1,"message":"67","line":91,"column":8,"nodeType":"68","endLine":91,"endColumn":23,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"63","line":94,"column":40,"nodeType":"64","messageId":"65","endLine":94,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":96,"column":44,"nodeType":"64","messageId":"65","endLine":96,"endColumn":46},{"ruleId":"66","severity":1,"message":"70","line":103,"column":8,"nodeType":"68","endLine":103,"endColumn":22,"suggestions":"71"},{"ruleId":"62","severity":1,"message":"63","line":106,"column":40,"nodeType":"64","messageId":"65","endLine":106,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":108,"column":44,"nodeType":"64","messageId":"65","endLine":108,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":110,"column":51,"nodeType":"64","messageId":"65","endLine":110,"endColumn":53},{"ruleId":"66","severity":1,"message":"72","line":124,"column":8,"nodeType":"68","endLine":124,"endColumn":20,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"74","line":168,"column":70,"nodeType":"64","messageId":"75","endLine":168,"endColumn":72},{"ruleId":"62","severity":1,"message":"74","line":195,"column":65,"nodeType":"64","messageId":"75","endLine":195,"endColumn":67},{"ruleId":"62","severity":1,"message":"74","line":197,"column":75,"nodeType":"64","messageId":"75","endLine":197,"endColumn":77},{"ruleId":"58","replacedBy":"76"},{"ruleId":"60","replacedBy":"77"},{"ruleId":"62","severity":1,"message":"63","line":86,"column":40,"nodeType":"64","messageId":"65","endLine":86,"endColumn":42},{"ruleId":"66","severity":1,"message":"67","line":91,"column":8,"nodeType":"68","endLine":91,"endColumn":23,"suggestions":"78"},{"ruleId":"62","severity":1,"message":"63","line":94,"column":40,"nodeType":"64","messageId":"65","endLine":94,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":96,"column":44,"nodeType":"64","messageId":"65","endLine":96,"endColumn":46},{"ruleId":"66","severity":1,"message":"70","line":103,"column":8,"nodeType":"68","endLine":103,"endColumn":22,"suggestions":"79"},{"ruleId":"62","severity":1,"message":"63","line":106,"column":40,"nodeType":"64","messageId":"65","endLine":106,"endColumn":42},{"ruleId":"62","severity":1,"message":"63","line":108,"column":44,"nodeType":"64","messageId":"65","endLine":108,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":110,"column":51,"nodeType":"64","messageId":"65","endLine":110,"endColumn":53},{"ruleId":"66","severity":1,"message":"72","line":124,"column":8,"nodeType":"68","endLine":124,"endColumn":20,"suggestions":"80"},{"ruleId":"62","severity":1,"message":"74","line":168,"column":70,"nodeType":"64","messageId":"75","endLine":168,"endColumn":72},{"ruleId":"62","severity":1,"message":"74","line":195,"column":65,"nodeType":"64","messageId":"75","endLine":195,"endColumn":67},{"ruleId":"62","severity":1,"message":"74","line":197,"column":75,"nodeType":"64","messageId":"75","endLine":197,"endColumn":77},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tableData.category'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has missing dependencies: 'categoryState' and 'tableData.category'. Either include them or remove the dependency array.",["84"],"React Hook useEffect has missing dependencies: 'categoryState', 'chartOptions', 'productState', and 'tableData.category'. Either include them or remove the dependency array. You can also do a functional update 'setChartOptions(c => ...)' if you only need 'chartOptions' in the 'setChartOptions' call.",["85"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["81"],["82"],["86"],["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"89","fix":"95"},{"desc":"91","fix":"96"},{"desc":"93","fix":"97"},"Update the dependencies array to be: [categoryState, tableData.category]",{"range":"98","text":"99"},"Update the dependencies array to be: [categoryState, productState, tableData.category]",{"range":"100","text":"101"},"Update the dependencies array to be: [brandState, categoryState, chartOptions, productState, tableData.category]",{"range":"102","text":"103"},{"range":"104","text":"99"},{"range":"105","text":"101"},{"range":"106","text":"103"},[2676,2691],"[categoryState, tableData.category]",[3049,3063],"[categoryState, productState, tableData.category]",[3840,3852],"[brandState, categoryState, chartOptions, productState, tableData.category]",[2676,2691],[3049,3063],[3840,3852]]